#include "Arduino.h"
#include <WiFi.h>
#include <ThingSpeak.h>
#include "WiFiClient.h"
#include <ES>

typedef struct DataStruct {
    float audio;
    float temperature;
    float battery;
    int16_t ax;
    int16_t ay;
    int16_t az;
    int16_t gx;
    int16_t gy;
    int16_t gz;
} DataStruct;
DataStruct data;

void printAll() {
    Serial.print("ax = ");
    Serial.print(data.ax);
    Serial.print(" | ay = ");
    Serial.print(data.ay);
    Serial.print(" | az = ");
    Serial.print(data.az);
    Serial.print(" | gx = ");
    Serial.print(data.gx);
    Serial.print(" | gy = ");
    Serial.print(data.gy);
    Serial.print(" | gz = ");
    Serial.print(data.gz);
    Serial.print(" | AUDIO: ");
    Serial.print(data.audio);
    Serial.print(" | TEMPERATURE: ");
    Serial.println(data.temperature);
    Serial.print(" | BATTERY: ");
    Serial.println(data.battery);
}


// Replace with your network credentials (STATION)
char* ssidStation = ":(";
const char* passwordStation = "soulknight";

unsigned long myChannelNumber = 829059;
const char* myWriteAPIKey = "4OL312MW06WZDDI3";

//Receiver Code

char str[4];

void setup() {
    Serial.begin(9600);
    Serial1.begin(115200);

    WiFi.begin(ssidStation, passwordStation);
    Serial.println("Connectiong to wifi...");
    long long oldTime = millis();
    while (WiFi.status() != WL_CONNECTED) {
        if (millis()-oldTime > 10000){
            ESP.
        }

    }
}

void loop() {
    unsigned long uBufSize = sizeof(data);
    char pBuffer[uBufSize];

    memcpy(pBuffer, &data, uBufSize);
    for(int i = 0; i<uBufSize;i++) {
        Serial.print(pBuffer[i]);
    }
    Serial.println();
    // if (millis() % 50000 == 0) {
//        ThingSpeak.writeField(myChannelNumber, 1, data.temperature, myWriteAPIKey);
//        Serial.print("send to channel 1 : ");
//        Serial.println(data.temperature);
//    }

}